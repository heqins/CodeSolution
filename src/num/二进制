位运算只有6种：非、与、或、异或、左移和右移。非运算对整数的二进制按位取反，0取反得1，1取反得0

如果数字原先是一个正数，则右移之后在最左边补n个0；如果数字原先是一个负数，则右移之后在最左边补n个1。

下面是对8位有符号数值（Java中的byte型整数）进行右移的例子：
00001010>>2=00000010
10001010>>3=11110001

